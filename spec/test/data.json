[
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30859",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30859/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30859/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30859/events",
    "html_url": "https://github.com/rails/rails/issues/30859",
    "id": 264645449,
    "number": 30859,
    "title": "Eager loading a scope with a join, results in the join disappearing",
    "user": {
      "login": "DarkArc",
      "id": 778012,
      "avatar_url": "https://avatars3.githubusercontent.com/u/778012?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DarkArc",
      "html_url": "https://github.com/DarkArc",
      "followers_url": "https://api.github.com/users/DarkArc/followers",
      "following_url": "https://api.github.com/users/DarkArc/following{/other_user}",
      "gists_url": "https://api.github.com/users/DarkArc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DarkArc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DarkArc/subscriptions",
      "organizations_url": "https://api.github.com/users/DarkArc/orgs",
      "repos_url": "https://api.github.com/users/DarkArc/repos",
      "events_url": "https://api.github.com/users/DarkArc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DarkArc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-10-11T16:03:39Z",
    "updated_at": "2017-10-11T16:40:38Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Brief Explanation\r\n\r\nThis is a bug with the includes/eager loading system where join queries defined in scopes disappear causing invalid SQL to be generated.\r\n\r\n#### Model Setup/Example\r\nThingWhichHasEvents\r\n```\r\n    has_many :event_record_links, as: :related_record, inverse_of: :related_record, dependent: :destroy\r\n\r\n    has_many :user_events, -> { user_defined }, through: :event_record_links, source: :event\r\n```\r\n\r\nEventRecordLink\r\n```\r\n    belongs_to :event, touch: true, inverse_of: :event_record_links\r\n    belongs_to :related_record, polymorphic: true\r\n```\r\n\r\nEvent\r\n```\r\n    scope :user_defined, -> { joins(:event_type).where('event_types.user_defined = ?', true) }\r\n```\r\n\r\n### Steps to reproduce\r\n\r\nEager load records of `ThingWhichHasEvents` ex:\r\n\r\n```\r\nThingWhichHasEvents.includes(:user_events).find_each do |thing|\r\n  puts thing.user_events.inspect\r\nend\r\n```\r\nThe same result is observed when using `preload` in place of `includes`.\r\n\r\n### Expected behavior\r\nThe `user_events` should be loaded.\r\n\r\n### Actual behavior\r\nThe request fails:\r\n```\r\nActiveRecord::StatementInvalid: PG::UndefinedTable: ERROR:  missing FROM-clause entry for table \"event_types\"\r\n\r\nSELECT \"event_record_links\".\"related_record_type\" ... FROM \"event_record_links\" LEFT OUTER JOIN \"events\" ON \"events\".\"id\" = \"event_record_links\".\"event_id\" WHERE (event_types.user_defined = 't') AND \"event_record_links\".\"related_record_type\" = $1 AND \"event_record_links\".\"related_record_id\" IN ('bd2edfcd-a7d1-44a0-be50-097c1055a0d9',...)\r\n```\r\nFor some reason, the join needed for the `user_events` scope in `Event` was removed.\r\n\r\n### System configuration\r\n**Rails version**: `5.0.2`\r\n\r\n**Ruby version**: `ruby 2.3.3p222 (2016-11-21) [x86_64-linux-gnu]`\r\n\r\n**Database**:  Postgres 9.5\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30858",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30858/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30858/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30858/events",
    "html_url": "https://github.com/rails/rails/issues/30858",
    "id": 264644065,
    "number": 30858,
    "title": "Join Queries Defined in Scopes Disappear when Eager Loading",
    "user": {
      "login": "DarkArc",
      "id": 778012,
      "avatar_url": "https://avatars3.githubusercontent.com/u/778012?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DarkArc",
      "html_url": "https://github.com/DarkArc",
      "followers_url": "https://api.github.com/users/DarkArc/followers",
      "following_url": "https://api.github.com/users/DarkArc/following{/other_user}",
      "gists_url": "https://api.github.com/users/DarkArc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DarkArc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DarkArc/subscriptions",
      "organizations_url": "https://api.github.com/users/DarkArc/orgs",
      "repos_url": "https://api.github.com/users/DarkArc/repos",
      "events_url": "https://api.github.com/users/DarkArc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DarkArc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-10-11T15:59:56Z",
    "updated_at": "2017-10-11T15:59:56Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Brief Explanation\r\n\r\nThis is a bug with the includes/eager loading system where join queries defined in scopes disappear causing invalid SQL to be generated.\r\n\r\n#### Model Setup/Example\r\nThingWhichHasEvents\r\n```\r\n    has_many :event_record_links, as: :related_record, inverse_of: :related_record, dependent: :destroy\r\n\r\n    has_many :user_events, -> { user_defined }, through: :event_record_links, source: :event\r\n```\r\n\r\nEventRecordLink\r\n```\r\n    belongs_to :event, touch: true, inverse_of: :event_record_links\r\n    belongs_to :related_record, polymorphic: true\r\n```\r\n\r\nEvent\r\n```\r\n    scope :user_defined, -> { joins(:event_type).where('event_types.user_defined = ?', true) }\r\n```\r\n\r\n### Steps to reproduce\r\n\r\nEager load records of `ThingWhichHasEvents` ex:\r\n\r\n```\r\nThingWhichHasEvents.includes(:user_events).find_each do |thing|\r\n  puts thing.user_events.inspect\r\nend\r\n```\r\nThe same result is observed when using `preload` in place of `includes`.\r\n\r\n### Expected behavior\r\nThe `user_events` should be loaded.\r\n\r\n### Actual behavior\r\nThe request fails:\r\n```\r\nActiveRecord::StatementInvalid: PG::UndefinedTable: ERROR:  missing FROM-clause entry for table \"event_types\"\r\n\r\nSELECT \"event_record_links\".\"related_record_type\" ... FROM \"event_record_links\" LEFT OUTER JOIN \"events\" ON \"events\".\"id\" = \"event_record_links\".\"event_id\" WHERE (event_types.user_defined = 't') AND \"event_record_links\".\"related_record_type\" = $1 AND \"event_record_links\".\"related_record_id\" IN ('bd2edfcd-a7d1-44a0-be50-097c1055a0d9',...)\r\n```\r\nFor some reason, the join needed for the `user_events` scope in `Event` was removed.\r\n\r\n### System configuration\r\n**Rails version**: `5.0.2`\r\n\r\n**Ruby version**: `ruby 2.3.3p222 (2016-11-21) [x86_64-linux-gnu]`\r\n\r\n**Database**:  Postgres 9.5\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30857",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30857/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30857/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30857/events",
    "html_url": "https://github.com/rails/rails/pull/30857",
    "id": 264590838,
    "number": 30857,
    "title": "Don't set the delivery_method to :test when the existing delivery_method is not either :smtp or :send_mail.",
    "user": {
      "login": "aditya-kapoor",
      "id": 1955930,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1955930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aditya-kapoor",
      "html_url": "https://github.com/aditya-kapoor",
      "followers_url": "https://api.github.com/users/aditya-kapoor/followers",
      "following_url": "https://api.github.com/users/aditya-kapoor/following{/other_user}",
      "gists_url": "https://api.github.com/users/aditya-kapoor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aditya-kapoor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aditya-kapoor/subscriptions",
      "organizations_url": "https://api.github.com/users/aditya-kapoor/orgs",
      "repos_url": "https://api.github.com/users/aditya-kapoor/repos",
      "events_url": "https://api.github.com/users/aditya-kapoor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aditya-kapoor/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "schneems",
      "id": 59744,
      "avatar_url": "https://avatars2.githubusercontent.com/u/59744?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/schneems",
      "html_url": "https://github.com/schneems",
      "followers_url": "https://api.github.com/users/schneems/followers",
      "following_url": "https://api.github.com/users/schneems/following{/other_user}",
      "gists_url": "https://api.github.com/users/schneems/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/schneems/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/schneems/subscriptions",
      "organizations_url": "https://api.github.com/users/schneems/orgs",
      "repos_url": "https://api.github.com/users/schneems/repos",
      "events_url": "https://api.github.com/users/schneems/events{/privacy}",
      "received_events_url": "https://api.github.com/users/schneems/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "schneems",
        "id": 59744,
        "avatar_url": "https://avatars2.githubusercontent.com/u/59744?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/schneems",
        "html_url": "https://github.com/schneems",
        "followers_url": "https://api.github.com/users/schneems/followers",
        "following_url": "https://api.github.com/users/schneems/following{/other_user}",
        "gists_url": "https://api.github.com/users/schneems/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/schneems/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/schneems/subscriptions",
        "organizations_url": "https://api.github.com/users/schneems/orgs",
        "repos_url": "https://api.github.com/users/schneems/repos",
        "events_url": "https://api.github.com/users/schneems/events{/privacy}",
        "received_events_url": "https://api.github.com/users/schneems/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-10-11T13:40:34Z",
    "updated_at": "2017-10-11T13:40:37Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/30857",
      "html_url": "https://github.com/rails/rails/pull/30857",
      "diff_url": "https://github.com/rails/rails/pull/30857.diff",
      "patch_url": "https://github.com/rails/rails/pull/30857.patch"
    },
    "body": "### Summary\r\nIn the scenarios where we have the test unit classes inheriting from `ActionMailer::TestCase` which explicitly sets the delivery_method to `:test` irrespective of the value specified in the test environment. \r\n\r\nI think this should not be case and since there are defaults provided for the test environments but there are cases where I don't want to use the `:test` as the delivery_method and use something like `:letter_opener` for example as a preferred delivery method.\r\n\r\n### Other Information\r\nFixes #30665 \r\n\r\nIf you are updating any of the CHANGELOG files or are asked to update the\r\nCHANGELOG files by reviewers, please add the CHANGELOG entry at the top of the file.\r\n\r\nFinally, if your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails!"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30856",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30856/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30856/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30856/events",
    "html_url": "https://github.com/rails/rails/issues/30856",
    "id": 264576601,
    "number": 30856,
    "title": "ActiveRecord serialize with Marshal as coded does not work",
    "user": {
      "login": "kreintjes",
      "id": 3602336,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3602336?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kreintjes",
      "html_url": "https://github.com/kreintjes",
      "followers_url": "https://api.github.com/users/kreintjes/followers",
      "following_url": "https://api.github.com/users/kreintjes/following{/other_user}",
      "gists_url": "https://api.github.com/users/kreintjes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kreintjes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kreintjes/subscriptions",
      "organizations_url": "https://api.github.com/users/kreintjes/orgs",
      "repos_url": "https://api.github.com/users/kreintjes/repos",
      "events_url": "https://api.github.com/users/kreintjes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kreintjes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-10-11T12:58:20Z",
    "updated_at": "2017-10-11T12:58:20Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "I cannot use the Marshal class directly for the [ActiveRecord serialize feature](http://api.rubyonrails.org/classes/ActiveRecord/AttributeMethods/Serialization/ClassMethods.html#method-i-serialize). When I do this and try to save the object, I get an error.\r\n\r\n### Steps to reproduce\r\nCreate an ActiveRecord model with a binary column which is serialized through Marshal, i.e.: `bin/rails g model MyModel data:binary`\r\n\r\napp/models/my_model.rb:\r\n```\r\nclass MyModel < ApplicationRecord\r\n   serialize :data, Marshall\r\nend\r\n```\r\n\r\nAnd try to instantiate and save the model: `MyModel.create!`. Problem also occurs when filling data with something (e.g. a Hash with some key values).\r\n\r\n### Expected behavior\r\nI expect the instance to be stored in the database, where the given data is serialized using Marshal.dump.\r\n\r\n### Actual behavior\r\nI get an error: \"TypeError: instance of IO needed\"\r\n\r\n### System configuration\r\n**Rails version**: 5.0.4\r\n\r\n**Ruby version**: 2.4.1\r\n\r\n### Cause and potential solution\r\nThe error is caused by the calling Marshal.load(nil) in [ActiveRecord::Type::Serialized#default_value?](https://github.com/rails/rails/blob/99820fbeb29ae35a7771f3991bd119b102861aa7/activerecord/lib/active_record/type/serialized.rb#L53), which is called from the deserialize method in the same file.\r\n\r\nIt can be fixed by by creating a coder class in the spirit of [ActiveRecord::Coders::YAMLColumn](https://github.com/rails/rails/blob/99820fbeb29ae35a7771f3991bd119b102861aa7/activerecord/lib/active_record/coders/yaml_column.rb) where Marshal.load(data) is only performed if data not nil: `obj = Marshal.load(marshal) unless marshal.nil?`. The coder class should then be used in the ActiveRecord model: `serialize :data, MarshallCoder.new(:data)`. However I do not know if this is the way to go.\r\n\r\nShould serialize always be used with a special coder object, or should it also be possible to use Serialization classes like YAML and Marshall directly? The documentation is a bit vague on that. In case of the first, then it probably would be nice to add a MarshallColumn coder class to active_record/coders as well. In case of the latter, the serialized type should be fix to not call `coder.load(nil)`, but not sure how (maybe rescue from exception in which case `default_value?` always returns false?)."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30854",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30854/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30854/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30854/events",
    "html_url": "https://github.com/rails/rails/pull/30854",
    "id": 264428788,
    "number": 30854,
    "title": "Add ability to serialize Proc argument",
    "user": {
      "login": "shartep",
      "id": 12148408,
      "avatar_url": "https://avatars3.githubusercontent.com/u/12148408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shartep",
      "html_url": "https://github.com/shartep",
      "followers_url": "https://api.github.com/users/shartep/followers",
      "following_url": "https://api.github.com/users/shartep/following{/other_user}",
      "gists_url": "https://api.github.com/users/shartep/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shartep/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shartep/subscriptions",
      "organizations_url": "https://api.github.com/users/shartep/orgs",
      "repos_url": "https://api.github.com/users/shartep/repos",
      "events_url": "https://api.github.com/users/shartep/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shartep/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "kamipo",
      "id": 12642,
      "avatar_url": "https://avatars0.githubusercontent.com/u/12642?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kamipo",
      "html_url": "https://github.com/kamipo",
      "followers_url": "https://api.github.com/users/kamipo/followers",
      "following_url": "https://api.github.com/users/kamipo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kamipo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kamipo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kamipo/subscriptions",
      "organizations_url": "https://api.github.com/users/kamipo/orgs",
      "repos_url": "https://api.github.com/users/kamipo/repos",
      "events_url": "https://api.github.com/users/kamipo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kamipo/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kamipo",
        "id": 12642,
        "avatar_url": "https://avatars0.githubusercontent.com/u/12642?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kamipo",
        "html_url": "https://github.com/kamipo",
        "followers_url": "https://api.github.com/users/kamipo/followers",
        "following_url": "https://api.github.com/users/kamipo/following{/other_user}",
        "gists_url": "https://api.github.com/users/kamipo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kamipo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kamipo/subscriptions",
        "organizations_url": "https://api.github.com/users/kamipo/orgs",
        "repos_url": "https://api.github.com/users/kamipo/repos",
        "events_url": "https://api.github.com/users/kamipo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kamipo/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-10-11T01:27:36Z",
    "updated_at": "2017-10-11T16:50:49Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/30854",
      "html_url": "https://github.com/rails/rails/pull/30854",
      "diff_url": "https://github.com/rails/rails/pull/30854.diff",
      "patch_url": "https://github.com/rails/rails/pull/30854.patch"
    },
    "body": "### Summary\r\n\r\nafter updating from rails 4.1.9 to 4.2.8 I got an issues that if I use deliver_later for ActionMailer::Base object and put proc as an argument to mail rendering method I got an exception `SerializationError`.\r\n\r\nTo fix this I decide to update serialize_argument method.\r\n\r\n### Other Information\r\n\r\n\r\nThanks for contributing to Rails!\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30852",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30852/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30852/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30852/events",
    "html_url": "https://github.com/rails/rails/issues/30852",
    "id": 264388907,
    "number": 30852,
    "title": "Remove utf8=✓ input or set enforce_utf8 to false by default",
    "user": {
      "login": "kshnurov",
      "id": 498185,
      "avatar_url": "https://avatars2.githubusercontent.com/u/498185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kshnurov",
      "html_url": "https://github.com/kshnurov",
      "followers_url": "https://api.github.com/users/kshnurov/followers",
      "following_url": "https://api.github.com/users/kshnurov/following{/other_user}",
      "gists_url": "https://api.github.com/users/kshnurov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kshnurov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kshnurov/subscriptions",
      "organizations_url": "https://api.github.com/users/kshnurov/orgs",
      "repos_url": "https://api.github.com/users/kshnurov/repos",
      "events_url": "https://api.github.com/users/kshnurov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kshnurov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/rails/rails/milestones/63",
      "html_url": "https://github.com/rails/rails/milestone/63",
      "labels_url": "https://api.github.com/repos/rails/rails/milestones/63/labels",
      "id": 2828826,
      "number": 63,
      "title": "6.0.0",
      "description": "",
      "creator": {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars3.githubusercontent.com/u/47848?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 1,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2017-10-10T22:08:21Z",
      "updated_at": "2017-10-10T22:08:28Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 2,
    "created_at": "2017-10-10T21:51:24Z",
    "updated_at": "2017-10-10T23:24:34Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "`<input name=\"utf8\" type=\"hidden\" value=\"✓\" />` was introduced as a workaround for IE <= 8.\r\nAs of today IE5-8 has a 0.3% share worldwide and nothing really works in it.\r\nShouldn't we get rid of this input or at least set `enforce_utf8` to false by default?"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30851",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30851/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30851/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30851/events",
    "html_url": "https://github.com/rails/rails/issues/30851",
    "id": 264261364,
    "number": 30851,
    "title": "Error saved in secrets.yml.enc blocking decryption",
    "user": {
      "login": "leopirolo",
      "id": 13337627,
      "avatar_url": "https://avatars0.githubusercontent.com/u/13337627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leopirolo",
      "html_url": "https://github.com/leopirolo",
      "followers_url": "https://api.github.com/users/leopirolo/followers",
      "following_url": "https://api.github.com/users/leopirolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/leopirolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leopirolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leopirolo/subscriptions",
      "organizations_url": "https://api.github.com/users/leopirolo/orgs",
      "repos_url": "https://api.github.com/users/leopirolo/repos",
      "events_url": "https://api.github.com/users/leopirolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leopirolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-10-10T14:58:01Z",
    "updated_at": "2017-10-11T17:23:34Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\nSaving an error of syntax in `rails secrets:edit` leads to block the file forever.\r\n\r\nExample:\r\n```\r\nlogin: *login # Here is the syntax error\r\n  username: 'me@myself.andi'\r\n  password: '1234'\r\n\r\ndevelopment:\r\n  <<: *login\r\n```\r\n\r\n### Expected behavior\r\nWhile running `rails secrets:edit` again, open the file without error\r\n\r\n### Actual behavior\r\n`/Users/leo/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych.rb:377:in 'parse': (<unknown>): did not find expected key while parsing a block mapping at line 2 column 1 (Psych::SyntaxError)`\r\n\r\n### System configuration\r\n**Rails version**:\r\n5.1.2\r\n**Ruby version**:\r\n2.4.1p111 (2017-03-22 revision 58053) [x86_64-darwin16]\r\n\r\n(Not sure if the issue is already reported, if so, my bad, I must have missed it)"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30848",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30848/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30848/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30848/events",
    "html_url": "https://github.com/rails/rails/issues/30848",
    "id": 264099382,
    "number": 30848,
    "title": "Wrong typecast when plucking boolean value from joined table in MySQL2",
    "user": {
      "login": "DerTraveler",
      "id": 6623784,
      "avatar_url": "https://avatars1.githubusercontent.com/u/6623784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DerTraveler",
      "html_url": "https://github.com/DerTraveler",
      "followers_url": "https://api.github.com/users/DerTraveler/followers",
      "following_url": "https://api.github.com/users/DerTraveler/following{/other_user}",
      "gists_url": "https://api.github.com/users/DerTraveler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DerTraveler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DerTraveler/subscriptions",
      "organizations_url": "https://api.github.com/users/DerTraveler/orgs",
      "repos_url": "https://api.github.com/users/DerTraveler/repos",
      "events_url": "https://api.github.com/users/DerTraveler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DerTraveler/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-10-10T04:57:59Z",
    "updated_at": "2017-10-10T14:17:37Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\n\r\nhttps://gist.github.com/DerTraveler/05703597ee825dcbca64735c8976114b\r\n\r\n### Expected behavior\r\nWhen plucking a boolean value from a joined table it should be returned as a list of booleans.\r\n\r\nThis is the behaviour pluck shows on an unjoined table. Also when reproducing the steps with another adapter (like postgresql), the values are properly returned as booleans.\r\n\r\n### Actual behavior\r\nIt is returned as a list of integers\r\n\r\n### System configuration\r\n**Rails version**: master, so I guess > 5.1.4 - but was initially found on 4.2.7.1\r\n\r\n**Ruby version**: 2.4.2\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30846",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30846/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30846/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30846/events",
    "html_url": "https://github.com/rails/rails/issues/30846",
    "id": 264057077,
    "number": 30846,
    "title": "Referential integrity not disabled when a table name is shared across schemas (Postgresql)",
    "user": {
      "login": "jasonwinn",
      "id": 10801,
      "avatar_url": "https://avatars2.githubusercontent.com/u/10801?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasonwinn",
      "html_url": "https://github.com/jasonwinn",
      "followers_url": "https://api.github.com/users/jasonwinn/followers",
      "following_url": "https://api.github.com/users/jasonwinn/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasonwinn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasonwinn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasonwinn/subscriptions",
      "organizations_url": "https://api.github.com/users/jasonwinn/orgs",
      "repos_url": "https://api.github.com/users/jasonwinn/repos",
      "events_url": "https://api.github.com/users/jasonwinn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasonwinn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-10-09T23:43:27Z",
    "updated_at": "2017-10-09T23:43:27Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\n1. Create a model with the same table name under two different database schemas.\r\n   1. e.g. `User::Identity` (schema: user, table_name: identities) and `Account::Identity` (schema: account, table_name: identities)\r\n       * These would live `under app/models/user/identity.rb` and `app/models/account/identity.rb`\r\n2. Create fixtures:\r\n   1. `test/fixtures/user/identities.yml`\r\n   2. `test/fixtures/account/identities.yml`\r\n\r\n3. run `rails test`\r\n\r\n### Expected behavior\r\nReferential integrity via `DISABLE TRIGGER ALL` should be triggered for `user.identities` and `account.identities`\r\n\r\nExpected output in logs:\r\n```\r\nALTER TABLE \"user.identities\" DISABLE TRIGGER ALL;ALTER TABLE \"account.identities\" DISABLE TRIGGER ALL;\r\n```\r\n\r\n### Actual behavior\r\nReferential integrity is not disabled on _both tables_ because the schema names are not specified in the SQL being executed. E.g. The table \"identities\" is being referenced instead of \"schema_name.identities\".\r\n\r\nThe output will look like:\r\n```\r\nALTER TABLE \"identities\" DISABLE TRIGGER ALL;ALTER TABLE \"identities\" DISABLE TRIGGER ALL;\r\n```\r\n  \r\n### System configuration\r\n**Rails version**:\r\n5.1.4\r\n\r\n**Ruby version**:\r\n2.3.4\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30844",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30844/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30844/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30844/events",
    "html_url": "https://github.com/rails/rails/issues/30844",
    "id": 263950376,
    "number": 30844,
    "title": "Puma/Rails locks up when performing an HTTP request to self.",
    "user": {
      "login": "pharmmd-rich",
      "id": 16308798,
      "avatar_url": "https://avatars1.githubusercontent.com/u/16308798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pharmmd-rich",
      "html_url": "https://github.com/pharmmd-rich",
      "followers_url": "https://api.github.com/users/pharmmd-rich/followers",
      "following_url": "https://api.github.com/users/pharmmd-rich/following{/other_user}",
      "gists_url": "https://api.github.com/users/pharmmd-rich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pharmmd-rich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pharmmd-rich/subscriptions",
      "organizations_url": "https://api.github.com/users/pharmmd-rich/orgs",
      "repos_url": "https://api.github.com/users/pharmmd-rich/repos",
      "events_url": "https://api.github.com/users/pharmmd-rich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pharmmd-rich/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-10-09T16:15:04Z",
    "updated_at": "2017-10-10T17:19:09Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Opening this both here and in the Puma issues list.\r\n\r\nI've previously posted an issue at Puma related to this, but I now have a project that will reproduce the issue 100% locally.  Source project that reproduces this is here:  https://github.com/pharmmd-rich/breaking-puma\r\n\r\nBasically, I use Typhoeus in a controller to perform an HTTP GET to another controller.  This causes a hard lock that you can't ctrl+c out of.  **I changed the workers/threads to 1 only to make this issue easier to reproduce**.  The workers/threads can be any value, and that only lowers the likelihood of the issue happening.  It still happens even with 20 workers and 20 threads.\r\n\r\nWe first ran across it because we use a gem that pulls some API information out of the same app we are trying to access.  This is because we use an SSO solution across all of our apps.\r\n\r\nNOTE:  This does not happen with Passenger or other platforms.  This leads me to think it's a Puma issue over a Rails issue, but I haven't investigated any further.\r\n\r\nThis affects ALL recent Rails versions that I've tried along with various Ruby versions, etc.  The test project is Rails 5.1.4 and Puma 3.10.0."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30842",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30842/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30842/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30842/events",
    "html_url": "https://github.com/rails/rails/issues/30842",
    "id": 263833076,
    "number": 30842,
    "title": "Join model not touching associated object on destroy",
    "user": {
      "login": "Linuus",
      "id": 379823,
      "avatar_url": "https://avatars2.githubusercontent.com/u/379823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Linuus",
      "html_url": "https://github.com/Linuus",
      "followers_url": "https://api.github.com/users/Linuus/followers",
      "following_url": "https://api.github.com/users/Linuus/following{/other_user}",
      "gists_url": "https://api.github.com/users/Linuus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Linuus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Linuus/subscriptions",
      "organizations_url": "https://api.github.com/users/Linuus/orgs",
      "repos_url": "https://api.github.com/users/Linuus/repos",
      "events_url": "https://api.github.com/users/Linuus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Linuus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-10-09T09:31:46Z",
    "updated_at": "2017-10-09T09:59:42Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\n\r\nRun this test case:\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\"\r\n  gem \"arel\", github: \"rails/arel\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :sites, force: true do |t|\r\n    t.datetime :updated_at, null: false\r\n    t.datetime :created_at, null: false\r\n  end\r\n\r\n  create_table :site_publications, force: true do |t|\r\n    t.integer :site_id\r\n    t.integer :guide_id\r\n    t.datetime :updated_at, null: false\r\n    t.datetime :created_at, null: false\r\n  end\r\n\r\n  create_table :guides, force: true do |t|\r\n    t.datetime :updated_at, null: false\r\n    t.datetime :created_at, null: false\r\n  end\r\nend\r\n\r\nclass Site < ActiveRecord::Base\r\n  has_many :site_publications\r\n  has_many :guides, through: :site_publications\r\nend\r\n\r\nclass SitePublication < ActiveRecord::Base\r\n  belongs_to :site, touch: true\r\n  belongs_to :guide\r\nend\r\n\r\nclass Guide < ActiveRecord::Base\r\n  has_many :site_publications\r\n  has_many :sites, through: :site_publications\r\nend\r\n\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_touch_callbacks\r\n    site = Site.create!\r\n    Guide.create!\r\n    Guide.create!\r\n    site_updated_at = site.updated_at\r\n    site.guide_ids = [1, 2]\r\n\r\n    assert site_updated_at < site.reload.updated_at, \"Site#updated_at should have been updated when publication was created\"\r\n\r\n    site_updated_at = site.reload.updated_at\r\n    site.guide_ids = [1]\r\n\r\n    assert site_updated_at < site.reload.updated_at, \"Site#updated_at should have been updated when publication was destroyed\"\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIt should touch the associated object on destroy. It doesn't seem to run any callbacks on destroy but it does when the join model (SitePublication in the test case) is created.\r\n\r\n### Actual behavior\r\nIt does not touch the associated object on destroy.\r\n\r\n### System configuration\r\n**Rails version**: 4.2.7.1 (This is what I run locally, but it seems to affect master as well as seen in the test case above)\r\n\r\n**Ruby version**: 2.3.3\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30841",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30841/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30841/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30841/events",
    "html_url": "https://github.com/rails/rails/issues/30841",
    "id": 263796365,
    "number": 30841,
    "title": "Using dependent as destroy, destroy not fails when association fails the destroy",
    "user": {
      "login": "teohm",
      "id": 164703,
      "avatar_url": "https://avatars3.githubusercontent.com/u/164703?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/teohm",
      "html_url": "https://github.com/teohm",
      "followers_url": "https://api.github.com/users/teohm/followers",
      "following_url": "https://api.github.com/users/teohm/following{/other_user}",
      "gists_url": "https://api.github.com/users/teohm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/teohm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/teohm/subscriptions",
      "organizations_url": "https://api.github.com/users/teohm/orgs",
      "repos_url": "https://api.github.com/users/teohm/repos",
      "events_url": "https://api.github.com/users/teohm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/teohm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-10-09T06:37:44Z",
    "updated_at": "2017-10-09T06:44:12Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Steps to reproduce\r\n\r\nRun this active_record_master test case to reproduce the error:\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\"\r\n  gem \"arel\", github: \"rails/arel\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :main_resources, force: true do |t|\r\n    t.integer :sub_resource_id\r\n  end\r\n\r\n  create_table :sub_resources, force: true do |t|\r\n  end\r\n\r\n  create_table :allocations, force: true do |t|\r\n    t.integer :sub_resource_id\r\n  end\r\nend\r\n\r\nclass MainResource < ActiveRecord::Base\r\n  belongs_to :sub_resource, dependent: :destroy\r\nend\r\n\r\nclass SubResource < ActiveRecord::Base\r\n  has_many :allocations, dependent: :restrict_with_error\r\nend\r\n\r\nclass Allocation < ActiveRecord::Base\r\n  belongs_to :sub_resource\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_destroy_main_when_sub_resource_has_empty_allocations\r\n    sub_resource = SubResource.create!\r\n    main_resource = MainResource.create!(sub_resource: sub_resource)\r\n\r\n    main_resource.destroy\r\n\r\n    assert_equal true, sub_resource.destroyed?, \"sub_resource destroyed\"\r\n    assert_equal true, main_resource.destroyed?, \"main_resource destroyed\"\r\n  end\r\n\r\n  def test_destroy_main_when_sub_resource_has_some_allocations\r\n    sub_resource = SubResource.create!\r\n    sub_resource.allocations << Allocation.create!\r\n\r\n    main_resource = MainResource.create!(sub_resource: sub_resource)\r\n\r\n    main_resource.destroy\r\n\r\n    assert_equal false, sub_resource.destroyed?, \"sub_resource not destroyed\"\r\n    assert_equal false, main_resource.destroyed?, \"main_resource not destroyed\" # it fails\r\n  end\r\nend\r\n```\r\n\r\nTest Output:\r\n```shell\r\nFailure:\r\nBugTest#test_destroy_main_when_sub_resource_has_some_allocations [active_record_destroy_should_fail_when_dependent_destroy_fails.rb:73]:\r\nmain_resource shouldn't be destroyed.\r\nExpected: false\r\n  Actual: true\r\n\r\n\r\nbin/rails test active_record_destroy_should_fail_when_dependent_destroy_fails.rb:64\r\n\r\n\r\n\r\nFinished in 0.047454s, 42.1461 runs/s, 42.1461 assertions/s.\r\n2 runs, 2 assertions, 1 failures, 1 errors, 0 skips\r\n```\r\n\r\n### Expected behavior\r\n\r\nIn this test case, `MainResource` has an association with dependent destroy i.e. `SubResource`. \r\n\r\n`main_resource.destroy` should fail when it fails to destroy the association. \r\n\r\n### Actual behavior\r\n\r\nWhen `main_resource.destroy`, `main_resource` is deleted, its association becomes an orphan record.\r\n\r\n### System configuration\r\n**Rails version**: master branch\r\n\r\n**Ruby version**: 2.4.2\r\n\r\n### Related Issue\r\n\r\nThere was a similar issue https://github.com/rails/rails/issues/5147 reported few years ago.\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30834",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30834/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30834/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30834/events",
    "html_url": "https://github.com/rails/rails/pull/30834",
    "id": 263703496,
    "number": 30834,
    "title": "[WIP] ActiveStorage: Add remote_url option",
    "user": {
      "login": "MatthiasRMS",
      "id": 13106445,
      "avatar_url": "https://avatars2.githubusercontent.com/u/13106445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MatthiasRMS",
      "html_url": "https://github.com/MatthiasRMS",
      "followers_url": "https://api.github.com/users/MatthiasRMS/followers",
      "following_url": "https://api.github.com/users/MatthiasRMS/following{/other_user}",
      "gists_url": "https://api.github.com/users/MatthiasRMS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MatthiasRMS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MatthiasRMS/subscriptions",
      "organizations_url": "https://api.github.com/users/MatthiasRMS/orgs",
      "repos_url": "https://api.github.com/users/MatthiasRMS/repos",
      "events_url": "https://api.github.com/users/MatthiasRMS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MatthiasRMS/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "kaspth",
      "id": 350807,
      "avatar_url": "https://avatars0.githubusercontent.com/u/350807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaspth",
      "html_url": "https://github.com/kaspth",
      "followers_url": "https://api.github.com/users/kaspth/followers",
      "following_url": "https://api.github.com/users/kaspth/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaspth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaspth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaspth/subscriptions",
      "organizations_url": "https://api.github.com/users/kaspth/orgs",
      "repos_url": "https://api.github.com/users/kaspth/repos",
      "events_url": "https://api.github.com/users/kaspth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaspth/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kaspth",
        "id": 350807,
        "avatar_url": "https://avatars0.githubusercontent.com/u/350807?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kaspth",
        "html_url": "https://github.com/kaspth",
        "followers_url": "https://api.github.com/users/kaspth/followers",
        "following_url": "https://api.github.com/users/kaspth/following{/other_user}",
        "gists_url": "https://api.github.com/users/kaspth/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kaspth/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kaspth/subscriptions",
        "organizations_url": "https://api.github.com/users/kaspth/orgs",
        "repos_url": "https://api.github.com/users/kaspth/repos",
        "events_url": "https://api.github.com/users/kaspth/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kaspth/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-10-08T08:57:12Z",
    "updated_at": "2017-10-08T08:57:15Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/30834",
      "html_url": "https://github.com/rails/rails/pull/30834",
      "diff_url": "https://github.com/rails/rails/pull/30834.diff",
      "patch_url": "https://github.com/rails/rails/pull/30834.patch"
    },
    "body": "### Allow uploads from remote urls\r\n\r\nBy passing a url through the remote_url option, it is possible to attach a remote file. \r\nFeedback would be greatly appreciated. \r\n\r\nI have 2 questions:\r\n- should I make a dedicated class for remote files ? (will be useful to extend it in the future) \r\n- where should I define error classes ? I at least need a DownloadError class. \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30827",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30827/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30827/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30827/events",
    "html_url": "https://github.com/rails/rails/pull/30827",
    "id": 263617185,
    "number": 30827,
    "title": "Properly build array of non basic objects by dedicated predicate handler",
    "user": {
      "login": "kamipo",
      "id": 12642,
      "avatar_url": "https://avatars0.githubusercontent.com/u/12642?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kamipo",
      "html_url": "https://github.com/kamipo",
      "followers_url": "https://api.github.com/users/kamipo/followers",
      "following_url": "https://api.github.com/users/kamipo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kamipo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kamipo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kamipo/subscriptions",
      "organizations_url": "https://api.github.com/users/kamipo/orgs",
      "repos_url": "https://api.github.com/users/kamipo/repos",
      "events_url": "https://api.github.com/users/kamipo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kamipo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-10-07T05:03:31Z",
    "updated_at": "2017-10-09T21:40:09Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/30827",
      "html_url": "https://github.com/rails/rails/pull/30827",
      "diff_url": "https://github.com/rails/rails/pull/30827.diff",
      "patch_url": "https://github.com/rails/rails/pull/30827.patch"
    },
    "body": "Otherwise the behavior will be undefined (actually incorrect)."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30823",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30823/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30823/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30823/events",
    "html_url": "https://github.com/rails/rails/pull/30823",
    "id": 263598773,
    "number": 30823,
    "title": "Fix after commit on update callback with optimistic locking",
    "user": {
      "login": "michaeltaras",
      "id": 1883,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaeltaras",
      "html_url": "https://github.com/michaeltaras",
      "followers_url": "https://api.github.com/users/michaeltaras/followers",
      "following_url": "https://api.github.com/users/michaeltaras/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaeltaras/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaeltaras/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaeltaras/subscriptions",
      "organizations_url": "https://api.github.com/users/michaeltaras/orgs",
      "repos_url": "https://api.github.com/users/michaeltaras/repos",
      "events_url": "https://api.github.com/users/michaeltaras/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaeltaras/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "rafaelfranca",
      "id": 47848,
      "avatar_url": "https://avatars3.githubusercontent.com/u/47848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafaelfranca",
      "html_url": "https://github.com/rafaelfranca",
      "followers_url": "https://api.github.com/users/rafaelfranca/followers",
      "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
      "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
      "repos_url": "https://api.github.com/users/rafaelfranca/repos",
      "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars3.githubusercontent.com/u/47848?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-10-06T23:43:40Z",
    "updated_at": "2017-10-06T23:56:25Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/30823",
      "html_url": "https://github.com/rails/rails/pull/30823",
      "diff_url": "https://github.com/rails/rails/pull/30823.diff",
      "patch_url": "https://github.com/rails/rails/pull/30823.patch"
    },
    "body": "When using optimistic locking, the `after_commit on: update` callback wasn't firing.  \r\n\r\nThe commit https://github.com/rails/rails/commit/371c083fb0620efebf7bd0188a66486403e12ecc added a new mechanism that set the @_trigger_update_callback instance variable to true when the `after_commit on: :update` callback should be fired.\r\n\r\nOptimistic locking overrides the normal _update_record method so we need to properly set the @_trigger_update_callback instance variable in there as well.  The `after_commit on: :destroy` method calls super so we don't have to worry about that one.\r\n\r\nFixes https://github.com/rails/rails/issues/30779\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30821",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30821/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30821/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30821/events",
    "html_url": "https://github.com/rails/rails/pull/30821",
    "id": 263554447,
    "number": 30821,
    "title": "ActiveStorage install note [skip ci]",
    "user": {
      "login": "GBH",
      "id": 78363,
      "avatar_url": "https://avatars2.githubusercontent.com/u/78363?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GBH",
      "html_url": "https://github.com/GBH",
      "followers_url": "https://api.github.com/users/GBH/followers",
      "following_url": "https://api.github.com/users/GBH/following{/other_user}",
      "gists_url": "https://api.github.com/users/GBH/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GBH/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GBH/subscriptions",
      "organizations_url": "https://api.github.com/users/GBH/orgs",
      "repos_url": "https://api.github.com/users/GBH/repos",
      "events_url": "https://api.github.com/users/GBH/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GBH/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "schneems",
      "id": 59744,
      "avatar_url": "https://avatars2.githubusercontent.com/u/59744?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/schneems",
      "html_url": "https://github.com/schneems",
      "followers_url": "https://api.github.com/users/schneems/followers",
      "following_url": "https://api.github.com/users/schneems/following{/other_user}",
      "gists_url": "https://api.github.com/users/schneems/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/schneems/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/schneems/subscriptions",
      "organizations_url": "https://api.github.com/users/schneems/orgs",
      "repos_url": "https://api.github.com/users/schneems/repos",
      "events_url": "https://api.github.com/users/schneems/events{/privacy}",
      "received_events_url": "https://api.github.com/users/schneems/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "schneems",
        "id": 59744,
        "avatar_url": "https://avatars2.githubusercontent.com/u/59744?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/schneems",
        "html_url": "https://github.com/schneems",
        "followers_url": "https://api.github.com/users/schneems/followers",
        "following_url": "https://api.github.com/users/schneems/following{/other_user}",
        "gists_url": "https://api.github.com/users/schneems/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/schneems/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/schneems/subscriptions",
        "organizations_url": "https://api.github.com/users/schneems/orgs",
        "repos_url": "https://api.github.com/users/schneems/repos",
        "events_url": "https://api.github.com/users/schneems/events{/privacy}",
        "received_events_url": "https://api.github.com/users/schneems/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-10-06T19:53:39Z",
    "updated_at": "2017-10-06T19:54:38Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/30821",
      "html_url": "https://github.com/rails/rails/pull/30821",
      "diff_url": "https://github.com/rails/rails/pull/30821.diff",
      "patch_url": "https://github.com/rails/rails/pull/30821.patch"
    },
    "body": "### Summary\r\n\r\nJust a note about how to get migrations over as it's not obvious that you need to look for it via `rails -T`"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30813",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30813/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30813/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30813/events",
    "html_url": "https://github.com/rails/rails/pull/30813",
    "id": 263306008,
    "number": 30813,
    "title": "Remove unused `secrets.yml` template",
    "user": {
      "login": "y-yagi",
      "id": 987638,
      "avatar_url": "https://avatars1.githubusercontent.com/u/987638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/y-yagi",
      "html_url": "https://github.com/y-yagi",
      "followers_url": "https://api.github.com/users/y-yagi/followers",
      "following_url": "https://api.github.com/users/y-yagi/following{/other_user}",
      "gists_url": "https://api.github.com/users/y-yagi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/y-yagi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/y-yagi/subscriptions",
      "organizations_url": "https://api.github.com/users/y-yagi/orgs",
      "repos_url": "https://api.github.com/users/y-yagi/repos",
      "events_url": "https://api.github.com/users/y-yagi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/y-yagi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "kaspth",
      "id": 350807,
      "avatar_url": "https://avatars0.githubusercontent.com/u/350807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaspth",
      "html_url": "https://github.com/kaspth",
      "followers_url": "https://api.github.com/users/kaspth/followers",
      "following_url": "https://api.github.com/users/kaspth/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaspth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaspth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaspth/subscriptions",
      "organizations_url": "https://api.github.com/users/kaspth/orgs",
      "repos_url": "https://api.github.com/users/kaspth/repos",
      "events_url": "https://api.github.com/users/kaspth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaspth/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kaspth",
        "id": 350807,
        "avatar_url": "https://avatars0.githubusercontent.com/u/350807?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kaspth",
        "html_url": "https://github.com/kaspth",
        "followers_url": "https://api.github.com/users/kaspth/followers",
        "following_url": "https://api.github.com/users/kaspth/following{/other_user}",
        "gists_url": "https://api.github.com/users/kaspth/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kaspth/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kaspth/subscriptions",
        "organizations_url": "https://api.github.com/users/kaspth/orgs",
        "repos_url": "https://api.github.com/users/kaspth/repos",
        "events_url": "https://api.github.com/users/kaspth/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kaspth/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-10-06T00:32:46Z",
    "updated_at": "2017-10-06T00:35:13Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/30813",
      "html_url": "https://github.com/rails/rails/pull/30813",
      "diff_url": "https://github.com/rails/rails/pull/30813.diff",
      "patch_url": "https://github.com/rails/rails/pull/30813.patch"
    },
    "body": "`secrets.yml` no longer used since #30067.\r\nTogether, removed `app_secret` method that only used in `secrets.yml`\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30811",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30811/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30811/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30811/events",
    "html_url": "https://github.com/rails/rails/issues/30811",
    "id": 263145414,
    "number": 30811,
    "title": "URLs containing certain character codes break routing (reprise)",
    "user": {
      "login": "jcoyne",
      "id": 92044,
      "avatar_url": "https://avatars2.githubusercontent.com/u/92044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcoyne",
      "html_url": "https://github.com/jcoyne",
      "followers_url": "https://api.github.com/users/jcoyne/followers",
      "following_url": "https://api.github.com/users/jcoyne/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcoyne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcoyne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcoyne/subscriptions",
      "organizations_url": "https://api.github.com/users/jcoyne/orgs",
      "repos_url": "https://api.github.com/users/jcoyne/repos",
      "events_url": "https://api.github.com/users/jcoyne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcoyne/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-10-05T14:25:23Z",
    "updated_at": "2017-10-05T14:25:58Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "This was originally raised in #4450 and I see that some code was created to address this:\r\n\r\nhttps://github.com/econsultancy/rails/commit/7c385d085f131346e617b8bbdecf05d006429576\r\n(I'm not seeing this code in the rails master branch though)\r\n\r\nWhen this url is called:\r\nhttps://example.com/assets/%F8%80%80%80%AE%F8%80%80%80%AE/%F8%80%80%80%AE%F8%80%80%80%AE/%F8%80%80%80%AE%F8%80%80%80%AE/%F8%80%80%80%AE%F8%80%80%80%AE/%F8%80%80%80%AE%F8%80%80%80%AE/%F8%80%80%80%AE%F8%80%80%80%AE/%F8%80%80%80%AE%F8%80%80%80%AE/%F8%80%80%80%AE%F8%80%80%80%AE/%F8%80%80%80%AE%F8%80%80%80%AE/%F8%80%80%80%AE%F8%80%80%80%AE/%F8%80%80%80%AE%F8%80%80%80%AE/%F8%80%80%80%AE%F8%80%80%80%AE/etc/passwd\r\n```\r\nArgumentError: invalid byte sequence in UTF-8\r\n\r\n    [GEM_ROOT]/gems/sprockets-3.7.1/lib/sprockets/server.rb:289 :in `[]`\r\n    [GEM_ROOT]/gems/sprockets-3.7.1/lib/sprockets/server.rb:289 :in `path_fingerprint`\r\n    [GEM_ROOT]/gems/sprockets-3.7.1/lib/sprockets/server.rb:36 :in `call`\r\n    [GEM_ROOT]/gems/actionpack-5.1.4/lib/action_dispatch/routing/mapper.rb:17 :in `block in <class:Constraints>`\r\n    [GEM_ROOT]/gems/actionpack-5.1.4/lib/action_dispatch/routing/mapper.rb:46 :in `serve`\r\n    [GEM_ROOT]/gems/actionpack-5.1.4/lib/action_dispatch/journey/router.rb:50 :in `block in serve`\r\n\r\n    [GEM_ROOT]/gems/actionpack-5.1.4/lib/action_dispatch/journey/router.rb:33 :in `each`\r\n    [GEM_ROOT]/gems/actionpack-5.1.4/lib/action_dispatch/journey/router.rb:33 :in `serve`\r\n    [GEM_ROOT]/gems/actionpack-5.1.4/lib/action_dispatch/routing/route_set.rb:834 :in `call`\r\n    [GEM_ROOT]/gems/rack-2.0.3/lib/rack/etag.rb:25 :in `call` \r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30806",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30806/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30806/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30806/events",
    "html_url": "https://github.com/rails/rails/issues/30806",
    "id": 262957038,
    "number": 30806,
    "title": "New reference to old table fails on foreign key (MySQL bigint(20) v. int(11))",
    "user": {
      "login": "rab",
      "id": 21304,
      "avatar_url": "https://avatars3.githubusercontent.com/u/21304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rab",
      "html_url": "https://github.com/rab",
      "followers_url": "https://api.github.com/users/rab/followers",
      "following_url": "https://api.github.com/users/rab/following{/other_user}",
      "gists_url": "https://api.github.com/users/rab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rab/subscriptions",
      "organizations_url": "https://api.github.com/users/rab/orgs",
      "repos_url": "https://api.github.com/users/rab/repos",
      "events_url": "https://api.github.com/users/rab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rab/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-10-04T23:01:08Z",
    "updated_at": "2017-10-11T14:48:32Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "When creating a new table with a `references` column for an existing (pre-5.1) table, the attempt to create a foreign key constraint (in MySQL) fails with a *huge* backtrace having just a few cryptic clues as to what went wrong.\r\n\r\n### Steps to reproduce\r\n\r\nCreate a foreign key to a table created pre-5.1 fails (MySQL). _(I know this isn't an executable test case based on [active_record_migrations_gem.rb](https://github.com/rails/rails/blob/master/guides/bug_report_templates/active_record_migrations_gem.rb), but I'm pretty sure this wouldn't be an issue for SQLite3 anyway.)_\r\n\r\nIn my (client's) case, the `Member` model exists and the `Role` and `Hat` models are going to be created (for a role-based authorization implementation). Starting simply with:\r\n\r\n```\r\n$ rails g migration CreateRole name description\r\n$ rails g migration CreateHat member:references role:references\r\n```\r\n### Expected behavior\r\n\r\nThis will create two new tables: a simple `roles` table and a simple `hats` table that joins `Member` to `Role`\r\n\r\n### Actual behavior\r\n\r\n```\r\n$ rails db:migrate\r\n== 20170927000118 CreateRole: migrating =======================================\r\n-- create_table(:roles)\r\n   -> 0.2327s\r\n== 20170927000118 CreateRole: migrated (0.2331s) ==============================\r\n\r\n== 20170927000202 CreateHat: migrating ========================================\r\n-- create_table(:hats)\r\nrails aborted!\r\nStandardError: An error has occurred, all later migrations canceled:\r\n\r\nMysql2::Error: Table 'sa_website4_dev.hats' doesn't exist: SHOW FULL FIELDS FROM `hats`\r\n```\r\n_and *many* more backtrace lines_ including these lines:\r\n\r\n```\r\nActiveRecord::StatementInvalid: Mysql2::Error: Table 'sa_website4_dev.hats' doesn't exist: SHOW FULL FIELDS FROM `hats`\r\nMysql2::Error: Table 'sa_website4_dev.hats' doesn't exist\r\nMysql2::Error: Cannot add foreign key constraint\r\n```\r\n\r\nThat last one turns out to be the clue!\r\n```\r\n==> db/migrate/20170927000118_create_role.rb <==\r\nclass CreateRole < ActiveRecord::Migration[5.1]\r\n  def change\r\n    create_table :roles do |t|\r\n      t.string :name, index: true, unique: true\r\n      t.string :description\r\n    end\r\n  end\r\nend\r\n\r\n==> db/migrate/20170927000202_create_hat.rb <==\r\nclass CreateHat < ActiveRecord::Migration[5.1]\r\n  def change\r\n    create_table :hats do |t|\r\n      t.references :member, foreign_key: true\r\n      t.references :role, foreign_key: true\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nWhen the SQL is generated, the attempt is to make a `hats.member_id` which is created as a `bigint(20)` be a foreign key referencing `members.id` which is a lowly `int(11)` having been created from an old migration (before the version tagging began and when 4-byte primary keys were good enough).\r\n\r\nThe \"fix\" is to change the migrations to be 5.0 rather than 5.1 and the constraints get created successfully. It would be better to avoid the massive backtrace and give a succinct message or perhaps recognize that the reference requested is to an `int(11)` column and create the new column and the constraint accordingly.\r\n\r\n### System configuration\r\n\r\n```\r\nRails 5.1.3\r\nruby 2.3.5p376 (2017-09-14 revision 59905) [x86_64-darwin14]\r\nmysqld  Ver 5.7.19 for osx10.10 on x86_64 (Homebrew)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30805",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30805/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30805/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30805/events",
    "html_url": "https://github.com/rails/rails/issues/30805",
    "id": 262949558,
    "number": 30805,
    "title": "Rails DateTime silent data modification",
    "user": {
      "login": "benmmurphy",
      "id": 392520,
      "avatar_url": "https://avatars2.githubusercontent.com/u/392520?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benmmurphy",
      "html_url": "https://github.com/benmmurphy",
      "followers_url": "https://api.github.com/users/benmmurphy/followers",
      "following_url": "https://api.github.com/users/benmmurphy/following{/other_user}",
      "gists_url": "https://api.github.com/users/benmmurphy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benmmurphy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benmmurphy/subscriptions",
      "organizations_url": "https://api.github.com/users/benmmurphy/orgs",
      "repos_url": "https://api.github.com/users/benmmurphy/repos",
      "events_url": "https://api.github.com/users/benmmurphy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benmmurphy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-10-04T22:22:58Z",
    "updated_at": "2017-10-04T22:24:26Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Steps to reproduce\r\n\r\nhttps://gist.github.com/benmmurphy/e3d6ef6f4545683132ae2eb23c3840cb\r\n\r\n1. Load a datetime_select helper for a datetime that falls on an ambiguous local time when rails has a time zone configured. For example: 2017/10/29 1:00 UTC in the Europe/London timezone is '2017/10/29 1:00'. However, '2017/10/29 1:00' in the Europe/London timezone happens at two different times in UTC:\r\n\r\n    2017/10/29 1:00 UTC\r\n    2017/10/29 0:00 UTC\r\n\r\n2. Submit the form updating the time. Rails will convert localtime to UTC before writing to the database. But the time is ambiguous and Rails resolves this by choosing the first time. The time is now changed even though the user did not modify it on the form.\r\n\r\n### Expected behavior\r\n\r\nIf you only have a single timezone configured for your application then this is not such a big problem because existing data won't be silently changed. Though, there is still the problem of allowing the user to specify the actual time they want but this is a problem that a lot applications that show a time in local time struggle with. But if you have multiple users sharing the a rails application with different time zones then it is possible for users to inadvertently corrupt the times other users have created even though they are not editing that field if they are in different time zones. There is also documentation in rails about how you might set up different time zones for different users so presumably this is a supported use case:\r\n\r\nhttps://github.com/rails/rails/blob/f1e89628fe3d18427e3b6644b1e7f3ef965ecd5b/activesupport/lib/active_support/core_ext/time/zones.rb#L27\r\n\r\nI think there needs to be consideration to throwing an exception in these cases when there is an ambiguity rather than have the risk of data being silently changed or at least give users the option of throwing the exception and keeping the current behaviour as the default.\r\n\r\n### Actual behavior\r\n\r\nThe date was silently changed.\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.4.0\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30803",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30803/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30803/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30803/events",
    "html_url": "https://github.com/rails/rails/pull/30803",
    "id": 262926887,
    "number": 30803,
    "title": "Allow reuse of NumberConverter instances",
    "user": {
      "login": "md5",
      "id": 76367,
      "avatar_url": "https://avatars0.githubusercontent.com/u/76367?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/md5",
      "html_url": "https://github.com/md5",
      "followers_url": "https://api.github.com/users/md5/followers",
      "following_url": "https://api.github.com/users/md5/following{/other_user}",
      "gists_url": "https://api.github.com/users/md5/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/md5/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/md5/subscriptions",
      "organizations_url": "https://api.github.com/users/md5/orgs",
      "repos_url": "https://api.github.com/users/md5/repos",
      "events_url": "https://api.github.com/users/md5/events{/privacy}",
      "received_events_url": "https://api.github.com/users/md5/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "sgrif",
      "id": 1529387,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1529387?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgrif",
      "html_url": "https://github.com/sgrif",
      "followers_url": "https://api.github.com/users/sgrif/followers",
      "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
      "organizations_url": "https://api.github.com/users/sgrif/orgs",
      "repos_url": "https://api.github.com/users/sgrif/repos",
      "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgrif/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "sgrif",
        "id": 1529387,
        "avatar_url": "https://avatars2.githubusercontent.com/u/1529387?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sgrif",
        "html_url": "https://github.com/sgrif",
        "followers_url": "https://api.github.com/users/sgrif/followers",
        "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
        "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
        "organizations_url": "https://api.github.com/users/sgrif/orgs",
        "repos_url": "https://api.github.com/users/sgrif/repos",
        "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sgrif/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 14,
    "created_at": "2017-10-04T20:53:28Z",
    "updated_at": "2017-10-05T21:17:55Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/30803",
      "html_url": "https://github.com/rails/rails/pull/30803",
      "diff_url": "https://github.com/rails/rails/pull/30803.diff",
      "patch_url": "https://github.com/rails/rails/pull/30803.patch"
    },
    "body": "### Summary\r\n\r\nThis PR makes it possible to reuse subclasses of `NumberConverter`. On pages with thousands of calls to helpers like `number_to_currency`, this can make a big difference in render time. I wrote the code in such a way that either the old calling convention for `NumberConverter.new(number, options)` or the new calling convention of `NumberConverter.new(options)` can be used.\r\n\r\n### Other Information\r\n\r\nI started a thread on the `rails-core` list about this, but I didn't get any response."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30800",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30800/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30800/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30800/events",
    "html_url": "https://github.com/rails/rails/pull/30800",
    "id": 262862521,
    "number": 30800,
    "title": "WIP: Retain positions of preloaded records on AR::Relation",
    "user": {
      "login": "dinahshi",
      "id": 5495713,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5495713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dinahshi",
      "html_url": "https://github.com/dinahshi",
      "followers_url": "https://api.github.com/users/dinahshi/followers",
      "following_url": "https://api.github.com/users/dinahshi/following{/other_user}",
      "gists_url": "https://api.github.com/users/dinahshi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dinahshi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dinahshi/subscriptions",
      "organizations_url": "https://api.github.com/users/dinahshi/orgs",
      "repos_url": "https://api.github.com/users/dinahshi/repos",
      "events_url": "https://api.github.com/users/dinahshi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dinahshi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "matthewd",
      "id": 1034,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1034?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewd",
      "html_url": "https://github.com/matthewd",
      "followers_url": "https://api.github.com/users/matthewd/followers",
      "following_url": "https://api.github.com/users/matthewd/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewd/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewd/orgs",
      "repos_url": "https://api.github.com/users/matthewd/repos",
      "events_url": "https://api.github.com/users/matthewd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewd/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "matthewd",
        "id": 1034,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/matthewd",
        "html_url": "https://github.com/matthewd",
        "followers_url": "https://api.github.com/users/matthewd/followers",
        "following_url": "https://api.github.com/users/matthewd/following{/other_user}",
        "gists_url": "https://api.github.com/users/matthewd/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/matthewd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/matthewd/subscriptions",
        "organizations_url": "https://api.github.com/users/matthewd/orgs",
        "repos_url": "https://api.github.com/users/matthewd/repos",
        "events_url": "https://api.github.com/users/matthewd/events{/privacy}",
        "received_events_url": "https://api.github.com/users/matthewd/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-10-04T17:09:17Z",
    "updated_at": "2017-10-04T17:26:46Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/30800",
      "html_url": "https://github.com/rails/rails/pull/30800",
      "diff_url": "https://github.com/rails/rails/pull/30800.diff",
      "patch_url": "https://github.com/rails/rails/pull/30800.patch"
    },
    "body": "ActiveRecord Relations load specific single record positions to answer `first`,\r\n`second`, `last`, etc. These positions are currently overloaded on `to_a` which\r\nloads all records.\r\n\r\nThis change re-orders the full result list on `to_a` to reflect any specific\r\npositionals we have already loaded.\r\n\r\nFull spec: https://gist.github.com/matthewd/041bb43bc131f09a133bb7c7fee1fd4b\r\n\r\n### Todo\r\n- [ ] disable on ordered relations"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30799",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30799/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30799/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30799/events",
    "html_url": "https://github.com/rails/rails/issues/30799",
    "id": 262780148,
    "number": 30799,
    "title": "DateTime range `include?` returns wrong output (or so I think)",
    "user": {
      "login": "apneadiving",
      "id": 247583,
      "avatar_url": "https://avatars1.githubusercontent.com/u/247583?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apneadiving",
      "html_url": "https://github.com/apneadiving",
      "followers_url": "https://api.github.com/users/apneadiving/followers",
      "following_url": "https://api.github.com/users/apneadiving/following{/other_user}",
      "gists_url": "https://api.github.com/users/apneadiving/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apneadiving/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apneadiving/subscriptions",
      "organizations_url": "https://api.github.com/users/apneadiving/orgs",
      "repos_url": "https://api.github.com/users/apneadiving/repos",
      "events_url": "https://api.github.com/users/apneadiving/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apneadiving/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-10-04T13:06:53Z",
    "updated_at": "2017-10-04T15:18:05Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\n```ruby\r\nref = DateTime.now\r\nts1 = (ref - 1.hour)..(ref + 1.hour)\r\nts2 = (ref)..(ref + 1.hour)\r\nts1.include? ts2.first\r\n> false\r\n```\r\n### Expected behavior\r\n`ts1.include? ts2.first` should return `true`\r\n\r\n### Actual behavior\r\n`ts1.include? ts2.first` returns `false`\r\n\r\n### Side notes\r\nInterestingly enough, if you use `Time` instead of `DateTime`, it works as expected.\r\n\r\nWith Ruby only, it does not work...\r\n```ruby\r\nrequire 'date'\r\nref = DateTime.now\r\nts1 = (ref - Rational(3600, 86400))..(ref + Rational(3600, 86400))\r\nts2 = (ref)..(ref + Rational(3600, 86400))\r\nts1.include? ts2.first\r\n> false\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 5.1.3\r\n**Ruby version**: 2.4.2\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30796",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30796/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30796/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30796/events",
    "html_url": "https://github.com/rails/rails/pull/30796",
    "id": 262602017,
    "number": 30796,
    "title": "Two failing test cases for #30519",
    "user": {
      "login": "khall",
      "id": 82598,
      "avatar_url": "https://avatars1.githubusercontent.com/u/82598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/khall",
      "html_url": "https://github.com/khall",
      "followers_url": "https://api.github.com/users/khall/followers",
      "following_url": "https://api.github.com/users/khall/following{/other_user}",
      "gists_url": "https://api.github.com/users/khall/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/khall/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/khall/subscriptions",
      "organizations_url": "https://api.github.com/users/khall/orgs",
      "repos_url": "https://api.github.com/users/khall/repos",
      "events_url": "https://api.github.com/users/khall/events{/privacy}",
      "received_events_url": "https://api.github.com/users/khall/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "kamipo",
      "id": 12642,
      "avatar_url": "https://avatars0.githubusercontent.com/u/12642?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kamipo",
      "html_url": "https://github.com/kamipo",
      "followers_url": "https://api.github.com/users/kamipo/followers",
      "following_url": "https://api.github.com/users/kamipo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kamipo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kamipo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kamipo/subscriptions",
      "organizations_url": "https://api.github.com/users/kamipo/orgs",
      "repos_url": "https://api.github.com/users/kamipo/repos",
      "events_url": "https://api.github.com/users/kamipo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kamipo/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kamipo",
        "id": 12642,
        "avatar_url": "https://avatars0.githubusercontent.com/u/12642?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kamipo",
        "html_url": "https://github.com/kamipo",
        "followers_url": "https://api.github.com/users/kamipo/followers",
        "following_url": "https://api.github.com/users/kamipo/following{/other_user}",
        "gists_url": "https://api.github.com/users/kamipo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kamipo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kamipo/subscriptions",
        "organizations_url": "https://api.github.com/users/kamipo/orgs",
        "repos_url": "https://api.github.com/users/kamipo/repos",
        "events_url": "https://api.github.com/users/kamipo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kamipo/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-10-03T21:53:05Z",
    "updated_at": "2017-10-03T21:53:08Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/30796",
      "html_url": "https://github.com/rails/rails/pull/30796",
      "diff_url": "https://github.com/rails/rails/pull/30796.diff",
      "patch_url": "https://github.com/rails/rails/pull/30796.patch"
    },
    "body": "### Summary\r\n\r\nTwo failing test cases, one calling `.require` and one calling `.permit` on a String."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30792",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30792/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30792/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30792/events",
    "html_url": "https://github.com/rails/rails/pull/30792",
    "id": 262458123,
    "number": 30792,
    "title": "Fix minor typos and add some suggestions [ci skip]",
    "user": {
      "login": "fatosmorina",
      "id": 9070583,
      "avatar_url": "https://avatars1.githubusercontent.com/u/9070583?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fatosmorina",
      "html_url": "https://github.com/fatosmorina",
      "followers_url": "https://api.github.com/users/fatosmorina/followers",
      "following_url": "https://api.github.com/users/fatosmorina/following{/other_user}",
      "gists_url": "https://api.github.com/users/fatosmorina/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fatosmorina/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fatosmorina/subscriptions",
      "organizations_url": "https://api.github.com/users/fatosmorina/orgs",
      "repos_url": "https://api.github.com/users/fatosmorina/repos",
      "events_url": "https://api.github.com/users/fatosmorina/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fatosmorina/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "sgrif",
      "id": 1529387,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1529387?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgrif",
      "html_url": "https://github.com/sgrif",
      "followers_url": "https://api.github.com/users/sgrif/followers",
      "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
      "organizations_url": "https://api.github.com/users/sgrif/orgs",
      "repos_url": "https://api.github.com/users/sgrif/repos",
      "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgrif/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "sgrif",
        "id": 1529387,
        "avatar_url": "https://avatars2.githubusercontent.com/u/1529387?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sgrif",
        "html_url": "https://github.com/sgrif",
        "followers_url": "https://api.github.com/users/sgrif/followers",
        "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
        "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
        "organizations_url": "https://api.github.com/users/sgrif/orgs",
        "repos_url": "https://api.github.com/users/sgrif/repos",
        "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sgrif/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-10-03T14:48:33Z",
    "updated_at": "2017-10-09T09:07:13Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/30792",
      "html_url": "https://github.com/rails/rails/pull/30792",
      "diff_url": "https://github.com/rails/rails/pull/30792.diff",
      "patch_url": "https://github.com/rails/rails/pull/30792.patch"
    },
    "body": "This _Pull Request_ includes some minor typo fixes and suggestions at README files and some comments inside actual code.\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30791",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30791/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30791/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30791/events",
    "html_url": "https://github.com/rails/rails/pull/30791",
    "id": 262400424,
    "number": 30791,
    "title": "Add update_only example to AR nested attributes doc [ci_skip]",
    "user": {
      "login": "felipecvo",
      "id": 54065,
      "avatar_url": "https://avatars2.githubusercontent.com/u/54065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/felipecvo",
      "html_url": "https://github.com/felipecvo",
      "followers_url": "https://api.github.com/users/felipecvo/followers",
      "following_url": "https://api.github.com/users/felipecvo/following{/other_user}",
      "gists_url": "https://api.github.com/users/felipecvo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felipecvo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felipecvo/subscriptions",
      "organizations_url": "https://api.github.com/users/felipecvo/orgs",
      "repos_url": "https://api.github.com/users/felipecvo/repos",
      "events_url": "https://api.github.com/users/felipecvo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felipecvo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "sgrif",
      "id": 1529387,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1529387?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgrif",
      "html_url": "https://github.com/sgrif",
      "followers_url": "https://api.github.com/users/sgrif/followers",
      "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
      "organizations_url": "https://api.github.com/users/sgrif/orgs",
      "repos_url": "https://api.github.com/users/sgrif/repos",
      "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgrif/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "sgrif",
        "id": 1529387,
        "avatar_url": "https://avatars2.githubusercontent.com/u/1529387?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sgrif",
        "html_url": "https://github.com/sgrif",
        "followers_url": "https://api.github.com/users/sgrif/followers",
        "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
        "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
        "organizations_url": "https://api.github.com/users/sgrif/orgs",
        "repos_url": "https://api.github.com/users/sgrif/repos",
        "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sgrif/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-10-03T11:59:16Z",
    "updated_at": "2017-10-03T11:59:19Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/30791",
      "html_url": "https://github.com/rails/rails/pull/30791",
      "diff_url": "https://github.com/rails/rails/pull/30791.diff",
      "patch_url": "https://github.com/rails/rails/pull/30791.patch"
    },
    "body": "### Summary\r\nImprove documentation about AR nested attributes adding an `update_only` example.\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30790",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30790/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30790/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30790/events",
    "html_url": "https://github.com/rails/rails/issues/30790",
    "id": 262350142,
    "number": 30790,
    "title": "ajax:before events not stopping remote links with method: option",
    "user": {
      "login": "guaguasi",
      "id": 1447611,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1447611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guaguasi",
      "html_url": "https://github.com/guaguasi",
      "followers_url": "https://api.github.com/users/guaguasi/followers",
      "following_url": "https://api.github.com/users/guaguasi/following{/other_user}",
      "gists_url": "https://api.github.com/users/guaguasi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guaguasi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guaguasi/subscriptions",
      "organizations_url": "https://api.github.com/users/guaguasi/orgs",
      "repos_url": "https://api.github.com/users/guaguasi/repos",
      "events_url": "https://api.github.com/users/guaguasi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guaguasi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-10-03T08:50:42Z",
    "updated_at": "2017-10-03T08:58:50Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\nUse `jquery-rails` gem. Require `jquery3` in `application.js` manifest. No `turbolinks`\r\n\r\n```\r\n<%= link_to 'Edit', edit_item_path(item), data: { confirm: 'Are you sure?' }, remote: true %>\r\n<%= link_to 'Destroy', item, method: :delete, data: { confirm: 'Are you sure?' }, remote: true %>\r\n\r\n<script type=\"text/javascript\">\r\n$(document).ready(function() {\r\n  $('a').on('ajax:before', function(e) {\r\n    return false;\r\n  }).on('ajax:success', function(e) {\r\n    console.log('success');\r\n  }).on('ajax:complete', function(e) {\r\n    console.log('complete');\r\n  });\r\n});\r\n</script>\r\n```\r\n\r\n### Expected behavior\r\nClicking either link should do nothing other than ask to confirm.\r\n\r\n### Actual behavior\r\nClicking link with `method: :delete` asks to confirm then follows through with the request successfully. Does not fire `ajax:complete` or `ajax:success`.\r\n\r\nIf `ajax:before` does not `return false`, `ajax:success` and `ajax:complete` are fired.\r\n\r\n### System configuration\r\n**Rails version**: Rails 5.1.4\r\n\r\n**Ruby version**: ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-linux]\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30788",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30788/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30788/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30788/events",
    "html_url": "https://github.com/rails/rails/issues/30788",
    "id": 262331323,
    "number": 30788,
    "title": "ActiveSupport::Cache::FileStore#cleanup does not remove expired entries from cache",
    "user": {
      "login": "erichmachado",
      "id": 613422,
      "avatar_url": "https://avatars0.githubusercontent.com/u/613422?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erichmachado",
      "html_url": "https://github.com/erichmachado",
      "followers_url": "https://api.github.com/users/erichmachado/followers",
      "following_url": "https://api.github.com/users/erichmachado/following{/other_user}",
      "gists_url": "https://api.github.com/users/erichmachado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erichmachado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erichmachado/subscriptions",
      "organizations_url": "https://api.github.com/users/erichmachado/orgs",
      "repos_url": "https://api.github.com/users/erichmachado/repos",
      "events_url": "https://api.github.com/users/erichmachado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erichmachado/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-10-03T07:35:01Z",
    "updated_at": "2017-10-03T07:37:24Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activesupport\", \"5.1.0\"\r\nend\r\n\r\nrequire \"active_support\"\r\nrequire \"minitest/autorun\"\r\n\r\n# Ensure backward compatibility with Minitest 4\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    Dir.mkdir(cache_dir) unless File.exist?(cache_dir)\r\n    @cache = ActiveSupport::Cache.lookup_store(:file_store, cache_dir, expires_in: 60)\r\n  end\r\n\r\n  def teardown\r\n    FileUtils.rm_r(cache_dir)\r\n  rescue Errno::ENOENT\r\n  end\r\n\r\n  def cache_dir\r\n    File.join(Dir.pwd, \"tmp_cache\")\r\n  end\r\n\r\n  def test_cleanup_removes_all_expired_entries\r\n    time = Time.now\r\n    @cache.write(\"foo\", \"bar\", expires_in: 10)\r\n    @cache.write(\"baz\", \"qux\")\r\n    @cache.write(\"quux\", \"corge\", expires_in: 20)\r\n    Time.stub(:now, time + 15) do\r\n      @cache.cleanup\r\n      refute @cache.exist?(\"foo\")\r\n      assert @cache.exist?(\"baz\")\r\n      assert @cache.exist?(\"quux\")\r\n      assert_equal 2, Dir.glob(File.join(cache_dir, \"**\")).size\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe number of entries in the cache store directory should equal the number of non-expired entries after the cleanup call.\r\n\r\n### Actual behavior\r\nThe cleanup call is not removing the expired entries from the cache directory. The test was returning a false positive since it was relying exclusively on the `ActiveSupport::Cache::Store#exist?` implementation, which returns `false` if the entry still exists in the storage but is expired.\r\n\r\n### System configuration\r\n**Rails version**: 5.1.0 (but also affects earlier versions, checked also with 5.0.0)\r\n\r\n**Ruby version**: 2.4.2\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30787",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30787/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30787/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30787/events",
    "html_url": "https://github.com/rails/rails/pull/30787",
    "id": 262301573,
    "number": 30787,
    "title": "Nested where query for customized-name associations",
    "user": {
      "login": "untidy-hair",
      "id": 3161723,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3161723?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/untidy-hair",
      "html_url": "https://github.com/untidy-hair",
      "followers_url": "https://api.github.com/users/untidy-hair/followers",
      "following_url": "https://api.github.com/users/untidy-hair/following{/other_user}",
      "gists_url": "https://api.github.com/users/untidy-hair/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/untidy-hair/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/untidy-hair/subscriptions",
      "organizations_url": "https://api.github.com/users/untidy-hair/orgs",
      "repos_url": "https://api.github.com/users/untidy-hair/repos",
      "events_url": "https://api.github.com/users/untidy-hair/events{/privacy}",
      "received_events_url": "https://api.github.com/users/untidy-hair/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "georgeclaghorn",
      "id": 94129,
      "avatar_url": "https://avatars1.githubusercontent.com/u/94129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/georgeclaghorn",
      "html_url": "https://github.com/georgeclaghorn",
      "followers_url": "https://api.github.com/users/georgeclaghorn/followers",
      "following_url": "https://api.github.com/users/georgeclaghorn/following{/other_user}",
      "gists_url": "https://api.github.com/users/georgeclaghorn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/georgeclaghorn/subscriptions",
      "organizations_url": "https://api.github.com/users/georgeclaghorn/orgs",
      "repos_url": "https://api.github.com/users/georgeclaghorn/repos",
      "events_url": "https://api.github.com/users/georgeclaghorn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/georgeclaghorn/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "georgeclaghorn",
        "id": 94129,
        "avatar_url": "https://avatars1.githubusercontent.com/u/94129?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/georgeclaghorn",
        "html_url": "https://github.com/georgeclaghorn",
        "followers_url": "https://api.github.com/users/georgeclaghorn/followers",
        "following_url": "https://api.github.com/users/georgeclaghorn/following{/other_user}",
        "gists_url": "https://api.github.com/users/georgeclaghorn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/georgeclaghorn/subscriptions",
        "organizations_url": "https://api.github.com/users/georgeclaghorn/orgs",
        "repos_url": "https://api.github.com/users/georgeclaghorn/repos",
        "events_url": "https://api.github.com/users/georgeclaghorn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/georgeclaghorn/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-10-03T04:34:08Z",
    "updated_at": "2017-10-03T04:34:19Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/30787",
      "html_url": "https://github.com/rails/rails/pull/30787",
      "diff_url": "https://github.com/rails/rails/pull/30787.diff",
      "patch_url": "https://github.com/rails/rails/pull/30787.patch"
    },
    "body": "### Summary\r\n\r\nThere was a situation where we expected something like this would work.\r\n(I changed the model names so it will fit the code change I have made.)\r\n\r\n```ruby\r\n# Models\r\nclass Guitar < AR\r\n  belongs_to :manufacturer, class_name: \"Company\", foreign_key: \"company_id\"\r\n  belongs_to :player, class_name: \"Person\", foreign_key: \"person_id\"\r\nend\r\n\r\nclass Person < AR\r\n  has_many :fancy_guitars, class_name: \"Guitar\"\r\nend\r\n\r\nclass Company < AR\r\n  has_many :guitars\r\nend\r\n\r\n# Query\r\nmanufacturer = Company.last\r\nPerson.where(guitars: { manufacturer: manufacturer }).joins(:fancy_guitars)\r\n```\r\n\r\nBut the query does not work as below\r\n```ruby\r\nPerson.where(guitars: { manufacturer: manufacturer }).joins(:fancy_guitars).to_sql\r\n# expected\r\n# => \"SELECT \\\"people\\\".* FROM \\\"people\\\" INNER JOIN \\\"guitars\\\" ON \\\"guitars\\\".\\\"person_id\\\" = \\\"people\\\".\\\"id\\\" WHERE \\\"guitars\\\".\\\"company_id\\\" = 2\"\r\n# actual\r\n# => \"SELECT \\\"people\\\".* FROM \\\"people\\\" INNER JOIN \\\"guitars\\\" ON \\\"guitars\\\".\\\"person_id\\\" = \\\"people\\\".\\\"id\\\" WHERE \\\"guitars\\\".\\\"manufacturer\\\" = 2\"\r\n```\r\n\r\nThis happens when the association has customized name (`has_many :fancy_guitars, class_name: \"Guitar\"` instead of `has_many :guitars`)\r\n\r\nI looked into it and it is because we pass table name to `klass._reflect_on_association`, where ideally we should pass association name instead here.\r\nhttps://github.com/rails/rails/blob/e0d2207ab321145c117c6d615ce209c6f873605d/activerecord/lib/active_record/table_metadata.rb#L49\r\n\r\nThis PR will improve the situation above by adding additional effort to get correct association object.\r\n\r\n### Other Information\r\nThis will work with `has_one` instead of `has_many` , too.\r\nThis will work with `includes` instead of `joins`, too.\r\n\r\n(If we could use association name (`fancy_guitars` instead of `guitars` in the case above) for where method, we would be able to use it, but I saw the decision made not to go with association name for where method.)\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/30784",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/30784/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/30784/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/30784/events",
    "html_url": "https://github.com/rails/rails/pull/30784",
    "id": 262260382,
    "number": 30784,
    "title": "Allow for partial durations via `/` operator",
    "user": {
      "login": "khall",
      "id": 82598,
      "avatar_url": "https://avatars1.githubusercontent.com/u/82598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/khall",
      "html_url": "https://github.com/khall",
      "followers_url": "https://api.github.com/users/khall/followers",
      "following_url": "https://api.github.com/users/khall/following{/other_user}",
      "gists_url": "https://api.github.com/users/khall/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/khall/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/khall/subscriptions",
      "organizations_url": "https://api.github.com/users/khall/orgs",
      "repos_url": "https://api.github.com/users/khall/repos",
      "events_url": "https://api.github.com/users/khall/events{/privacy}",
      "received_events_url": "https://api.github.com/users/khall/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "pixeltrix",
      "id": 6321,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6321?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pixeltrix",
      "html_url": "https://github.com/pixeltrix",
      "followers_url": "https://api.github.com/users/pixeltrix/followers",
      "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
      "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
      "repos_url": "https://api.github.com/users/pixeltrix/repos",
      "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pixeltrix",
        "id": 6321,
        "avatar_url": "https://avatars0.githubusercontent.com/u/6321?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pixeltrix",
        "html_url": "https://github.com/pixeltrix",
        "followers_url": "https://api.github.com/users/pixeltrix/followers",
        "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
        "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
        "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
        "repos_url": "https://api.github.com/users/pixeltrix/repos",
        "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-10-02T23:30:31Z",
    "updated_at": "2017-10-03T00:44:25Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/30784",
      "html_url": "https://github.com/rails/rails/pull/30784",
      "diff_url": "https://github.com/rails/rails/pull/30784.diff",
      "patch_url": "https://github.com/rails/rails/pull/30784.patch"
    },
    "body": "### Summary\r\n\r\nPreviously durations could be divided and would return partial durations,\r\nbut in Rails 5.1 dividing a duration such as\r\n\r\n    1.day / 2\r\n\r\nwould return a duration of 0 instead of 0.5 days. This change restores\r\nthat functionality by forcing the divisor to a float, which allows for\r\nthe partial duration to be returned. Also updated Duration::Scalar to\r\nbehave the same way. Fixes #30546.\r\n\r\n### Other Information\r\n\r\nI wasn't sure if I should do the same `.to_f` change for the Duration `elsif` block. I've never done `1.day / 2.hours` or anything similar, so not sure about that particular test case."
  }
]
